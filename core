local G2L = {};

-- StarterGui._conex
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["DisplayOrder"] = 2147483647;
G2L["1"]["Name"] = [[_conex]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui._conex._holder
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2"]["Size"] = UDim2.new(0, 400, 0, 20);
G2L["2"]["Position"] = UDim2.new(0.5, 0, 0.35, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[_holder]];


-- StarterGui._conex._holder._interface
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["ZIndex"] = 0;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3"]["Size"] = UDim2.new(0, 400, 0, 220);
G2L["3"]["Position"] = UDim2.new(0.5, 0, 5, 0);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Name"] = [[_interface]];
G2L["3"]["LayoutOrder"] = 1;


-- StarterGui._conex._holder._interface._auto
G2L["4"] = Instance.new("Frame", G2L["3"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4"]["Size"] = UDim2.new(0.5, 0, 1, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Name"] = [[_auto]];
G2L["4"]["BackgroundTransparency"] = 1;


-- StarterGui._conex._holder._interface._auto.UIListLayout
G2L["5"] = Instance.new("UIListLayout", G2L["4"]);
G2L["5"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._interface._auto.UIPadding
G2L["6"] = Instance.new("UIPadding", G2L["4"]);
G2L["6"]["PaddingTop"] = UDim.new(0, 5);
G2L["6"]["PaddingRight"] = UDim.new(0, 5);
G2L["6"]["PaddingLeft"] = UDim.new(0, 5);


-- StarterGui._conex._holder._interface._auto._wins
G2L["7"] = Instance.new("TextButton", G2L["4"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["7"]["TextScaled"] = true;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Name"] = [[_wins]];
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[autofarm wins]];


-- StarterGui._conex._holder._interface._auto._wins.UIPadding
G2L["8"] = Instance.new("UIPadding", G2L["7"]);
G2L["8"]["PaddingTop"] = UDim.new(0, 3);
G2L["8"]["PaddingRight"] = UDim.new(0, 5);
G2L["8"]["PaddingLeft"] = UDim.new(0, 5);
G2L["8"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._auto._wins._status
G2L["9"] = Instance.new("TextLabel", G2L["7"]);
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["TextSize"] = 14;
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["9"]["BackgroundTransparency"] = 1;
G2L["9"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = '[false]';
G2L["9"]["Name"] = [[_status]];


-- StarterGui._conex._holder._interface._auto._wins.UIListLayout
G2L["a"] = Instance.new("UIListLayout", G2L["7"]);
G2L["a"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
G2L["a"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["a"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._interface._auto._rebs
G2L["b"] = Instance.new("TextButton", G2L["4"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["LayoutOrder"] = 1;
G2L["b"]["Name"] = [[_rebs]];
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[auto rebirths]];


-- StarterGui._conex._holder._interface._auto._rebs.UIPadding
G2L["c"] = Instance.new("UIPadding", G2L["b"]);
G2L["c"]["PaddingTop"] = UDim.new(0, 3);
G2L["c"]["PaddingRight"] = UDim.new(0, 5);
G2L["c"]["PaddingLeft"] = UDim.new(0, 5);
G2L["c"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._auto._rebs.UIListLayout
G2L["d"] = Instance.new("UIListLayout", G2L["b"]);
G2L["d"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
G2L["d"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._interface._auto._rebs._status
G2L["e"] = Instance.new("TextLabel", G2L["b"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["TextSize"] = 14;
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = '[false]';
G2L["e"]["Name"] = [[_status]];


-- StarterGui._conex._holder._interface.UIListLayout
G2L["f"] = Instance.new("UIListLayout", G2L["3"]);
G2L["f"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["f"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui._conex._holder._interface._other
G2L["10"] = Instance.new("Frame", G2L["3"]);
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["10"]["Size"] = UDim2.new(0.5, 0, 1, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Name"] = [[_other]];
G2L["10"]["LayoutOrder"] = 1;
G2L["10"]["BackgroundTransparency"] = 1;


-- StarterGui._conex._holder._interface._other.UIListLayout
G2L["11"] = Instance.new("UIListLayout", G2L["10"]);
G2L["11"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._interface._other.UIPadding
G2L["12"] = Instance.new("UIPadding", G2L["10"]);
G2L["12"]["PaddingTop"] = UDim.new(0, 5);
G2L["12"]["PaddingRight"] = UDim.new(0, 5);
G2L["12"]["PaddingLeft"] = UDim.new(0, 5);


-- StarterGui._conex._holder._interface._other._setcs
G2L["13"] = Instance.new("TextButton", G2L["10"]);
G2L["13"]["TextWrapped"] = true;
G2L["13"]["BorderSizePixel"] = 0;
G2L["13"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["13"]["TextSize"] = 14;
G2L["13"]["TextColor3"] = Color3.fromRGB(255, 255, 0);
G2L["13"]["TextScaled"] = true;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["13"]["BackgroundTransparency"] = 1;
G2L["13"]["LayoutOrder"] = 1;
G2L["13"]["Name"] = [[_setcs]];
G2L["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["Text"] = [[set custom speed]];


-- StarterGui._conex._holder._interface._other._setcs.UIPadding
G2L["14"] = Instance.new("UIPadding", G2L["13"]);
G2L["14"]["PaddingTop"] = UDim.new(0, 3);
G2L["14"]["PaddingRight"] = UDim.new(0, 5);
G2L["14"]["PaddingLeft"] = UDim.new(0, 5);
G2L["14"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._other._setcs.UIListLayout
G2L["15"] = Instance.new("UIListLayout", G2L["13"]);
G2L["15"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
G2L["15"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["15"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._interface._other._cs
G2L["16"] = Instance.new("TextBox", G2L["10"]);
G2L["16"]["TextColor3"] = Color3.fromRGB(255, 255, 0);
G2L["16"]["PlaceholderColor3"] = Color3.fromRGB(151, 151, 0);
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["16"]["TextSize"] = 14;
G2L["16"]["Name"] = [[_cs]];
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["ClearTextOnFocus"] = false;
G2L["16"]["ClipsDescendants"] = true;
G2L["16"]["PlaceholderText"] = [[0]];
G2L["16"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Text"] = [[]];
G2L["16"]["BackgroundTransparency"] = 1;


-- StarterGui._conex._holder._interface._other._cs.UIPadding
G2L["17"] = Instance.new("UIPadding", G2L["16"]);
G2L["17"]["PaddingTop"] = UDim.new(0, 3);
G2L["17"]["PaddingRight"] = UDim.new(0, 5);
G2L["17"]["PaddingLeft"] = UDim.new(0, 5);
G2L["17"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._other._tpos
G2L["18"] = Instance.new("TextBox", G2L["10"]);
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 255, 0);
G2L["18"]["PlaceholderColor3"] = Color3.fromRGB(151, 151, 0);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["18"]["TextSize"] = 14;
G2L["18"]["Name"] = [[_tpos]];
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18"]["ClearTextOnFocus"] = false;
G2L["18"]["ClipsDescendants"] = true;
G2L["18"]["PlaceholderText"] = [[0, 0, 0]];
G2L["18"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[]];
G2L["18"]["LayoutOrder"] = 2;
G2L["18"]["BackgroundTransparency"] = 1;


-- StarterGui._conex._holder._interface._other._tpos.UIPadding
G2L["19"] = Instance.new("UIPadding", G2L["18"]);
G2L["19"]["PaddingTop"] = UDim.new(0, 3);
G2L["19"]["PaddingRight"] = UDim.new(0, 5);
G2L["19"]["PaddingLeft"] = UDim.new(0, 5);
G2L["19"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._other._setpos
G2L["1a"] = Instance.new("TextButton", G2L["10"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextColor3"] = Color3.fromRGB(255, 255, 0);
G2L["1a"]["TextScaled"] = true;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["1a"]["BackgroundTransparency"] = 1;
G2L["1a"]["LayoutOrder"] = 4;
G2L["1a"]["Name"] = [[_setpos]];
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[set custom position (tp)]];


-- StarterGui._conex._holder._interface._other._setpos.UIPadding
G2L["1b"] = Instance.new("UIPadding", G2L["1a"]);
G2L["1b"]["PaddingTop"] = UDim.new(0, 3);
G2L["1b"]["PaddingRight"] = UDim.new(0, 5);
G2L["1b"]["PaddingLeft"] = UDim.new(0, 5);
G2L["1b"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._interface._other._setpos.UIListLayout
G2L["1c"] = Instance.new("UIListLayout", G2L["1a"]);
G2L["1c"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
G2L["1c"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["1c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder.UIListLayout
G2L["1d"] = Instance.new("UIListLayout", G2L["2"]);
G2L["1d"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["1d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui._conex._holder._topbar
G2L["1e"] = Instance.new("Frame", G2L["2"]);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Name"] = [[_topbar]];
G2L["1e"]["BackgroundTransparency"] = 1;


-- StarterGui._conex._holder._topbar._title
G2L["1f"] = Instance.new("TextLabel", G2L["1e"]);
G2L["1f"]["TextWrapped"] = true;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1f"]["TextScaled"] = true;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
G2L["1f"]["BackgroundTransparency"] = 1;
G2L["1f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1f"]["Size"] = UDim2.new(0.95, 0, 1, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[conex]];
G2L["1f"]["Name"] = [[_title]];


-- StarterGui._conex._holder._topbar._title.UIPadding
G2L["20"] = Instance.new("UIPadding", G2L["1f"]);
G2L["20"]["PaddingTop"] = UDim.new(0, 3);
G2L["20"]["PaddingRight"] = UDim.new(0, 3);
G2L["20"]["PaddingLeft"] = UDim.new(0, 5);
G2L["20"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._topbar.UIListLayout
G2L["21"] = Instance.new("UIListLayout", G2L["1e"]);
G2L["21"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["21"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["21"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui._conex._holder._topbar._close
G2L["22"] = Instance.new("TextButton", G2L["1e"]);
G2L["22"]["TextWrapped"] = true;
G2L["22"]["BorderSizePixel"] = 0;
G2L["22"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["22"]["TextSize"] = 14;
G2L["22"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
G2L["22"]["TextScaled"] = true;
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["22"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["22"]["Size"] = UDim2.new(0.05, 0, 1, 0);
G2L["22"]["BackgroundTransparency"] = 1;
G2L["22"]["LayoutOrder"] = 1;
G2L["22"]["Name"] = [[_close]];
G2L["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["Text"] = [[X]];


-- StarterGui._conex._holder._topbar._close.UIPadding
G2L["23"] = Instance.new("UIPadding", G2L["22"]);
G2L["23"]["PaddingTop"] = UDim.new(0, 3);
G2L["23"]["PaddingRight"] = UDim.new(0, 7);
G2L["23"]["PaddingBottom"] = UDim.new(0, 3);


-- StarterGui._conex._holder._bottom
G2L["24"] = Instance.new("Frame", G2L["2"]);
G2L["24"]["ZIndex"] = 0;
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["24"]["Size"] = UDim2.new(0, 400, 0, 20);
G2L["24"]["Position"] = UDim2.new(0.5, 0, 5, 0);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Name"] = [[_bottom]];
G2L["24"]["LayoutOrder"] = 2;


-- StarterGui._conex._holder._bottom.UIListLayout
G2L["25"] = Instance.new("UIListLayout", G2L["24"]);
G2L["25"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["25"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["25"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui._conex._holder._bottom._info
G2L["26"] = Instance.new("TextLabel", G2L["24"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["26"]["TextScaled"] = true;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["TextSize"] = 14;
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["TextColor3"] = Color3.fromRGB(0, 201, 0);
G2L["26"]["BackgroundTransparency"] = 1;
G2L["26"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["26"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["26"]["Visible"] = false;
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[]];
G2L["26"]["Name"] = [[_info]];


-- StarterGui._conex._holder._bottom._info.UIPadding
G2L["27"] = Instance.new("UIPadding", G2L["26"]);
G2L["27"]["PaddingTop"] = UDim.new(0, 5);
G2L["27"]["PaddingRight"] = UDim.new(0, 5);
G2L["27"]["PaddingLeft"] = UDim.new(0, 5);
G2L["27"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui._conex._core
G2L["28"] = Instance.new("LocalScript", G2L["1"]);
G2L["28"]["Name"] = [[_core]];


-- StarterGui._conex._core
local function C_28()
local script = G2L["28"];
	local gui = script.Parent
	
	local holder = gui:FindFirstChild('_holder')
	
	local topbar = holder:FindFirstChild('_topbar')
	local main = holder:FindFirstChild('_interface')
	local bottom = holder:FindFirstChild('_bottom')
	
	local close = topbar:FindFirstChild('_close')
	local title = topbar:FindFirstChild('_title')
	
	local infolabel = bottom:FindFirstChild('_info')
	
	local autoframe = main:FindFirstChild('_auto')
	local otherframe = main:FindFirstChild('_other')
	
	local autowins = autoframe:FindFirstChild('_wins')
	local winstatus = autowins:FindFirstChild('_status')
	local autorebs = autoframe:FindFirstChild('_rebs')
	local rebstatus = autorebs:FindFirstChild('_status')
	
	local curposbox = otherframe:FindFirstChild('_tpos')
	local curspeedbox = otherframe:FindFirstChild('_cs')
	local setposbutton = otherframe:FindFirstChild('_setpos')
	local setspedbutton = otherframe:FindFirstChild('_setcs')
	
	local plr = game:GetService('Players').LocalPlayer
	
	local UIS = game:GetService('UserInputService')
	local toggleKey = Enum.KeyCode.Insert
	local dragToggle = nil
	local dragSpeed = 0
	local dragStart = nil
	local startPos = nil
	local autowinsenabled = false
	local autorebsenabled = false
	local targetwinpos = Vector3.new(13890, 0, -18550)
	local alittlbitupper = Vector3.new(13890, 10, -18550)
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(holder, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	local function toggleMenu()
		holder.Visible = not holder.Visible
	end
	
	local function toggleAutoWins()
		autowinsenabled = not autowinsenabled
	
		if autowinsenabled then
			winstatus.Text = '[true]'
			autowins.TextColor3 = Color3.fromRGB(0, 255, 0)
			winstatus.TextColor3 = Color3.fromRGB(0, 255, 0)
			while autowinsenabled do
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(targetwinpos)
				wait(0.1)
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(alittlbitupper)
			end
		else
			winstatus.Text = '[false]'
			autowins.TextColor3 = Color3.fromRGB(255, 0, 0)
			winstatus.TextColor3 = Color3.fromRGB(255, 0, 0)
		end
	end
	
	local function toggleAutoRebs()
		autorebsenabled = not autorebsenabled
	
		if autorebsenabled then
			rebstatus.Text = '[true]'
			autorebs.TextColor3 = Color3.fromRGB(0, 255, 0)
			rebstatus.TextColor3 = Color3.fromRGB(0, 255, 0)
			while autorebsenabled do
				game.ReplicatedStorage.RebirthEvent:FireServer()
				wait(0.5)
			end
		else
			rebstatus.Text = '[false]'
			autorebs.TextColor3 = Color3.fromRGB(255, 0, 0)
			rebstatus.TextColor3 = Color3.fromRGB(255, 0, 0)
		end
	end
	
	game:GetService("RunService").RenderStepped:Connect(function()
		if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local position = plr.Character.HumanoidRootPart.Position
			local charspeed = plr.Character.Humanoid.WalkSpeed
			curposbox.PlaceholderText = string.format("%.2f, %.2f, %.2f", position.X, position.Y, position.Z)
			curspeedbox.PlaceholderText = charspeed
		end
	end)
	
	close.MouseEnter:Connect(function()
		close.TextColor3 = Color3.fromRGB(255, 0, 0)
	end)
	
	close.MouseLeave:Connect(function()
		close.TextColor3 = Color3.fromRGB(0, 255, 0)
	end)
	
	close.MouseButton1Up:Connect(function()
		holder.Visible = false
	end)
	
	autowins.MouseButton1Up:Connect(toggleAutoWins)
	
	autorebs.MouseButton1Up:Connect(toggleAutoRebs)
	
	setposbutton.MouseButton1Up:Connect(function()
		local coordinates = curposbox.Text
		local x, y, z = coordinates:match("([^,]+),([^,]+),([^,]+)")
		x, y, z = tonumber(x), tonumber(y), tonumber(z)
	
		if x and y and z then
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
			end
		else
			curposbox.TextColor3 = Color3.fromRGB(255, 0, 0)
			wait(0.2)
			curposbox.TextColor3 = Color3.fromRGB(255, 255, 0)
			curposbox.Text = ""
		end
	end)
	
	setspedbutton.MouseButton1Click:Connect(function()
		local speed = tonumber(curspeedbox.Text)
		if speed then
			if plr.Character and plr.Character:FindFirstChild("Humanoid") then
				plr.Character.Humanoid.WalkSpeed = speed
				curspeedbox.Text = ""
			end
		else
			curspeedbox.TextColor3 = Color3.fromRGB(255, 0, 0)
			wait(0.2)
			curspeedbox.TextColor3 = Color3.fromRGB(255, 255, 0)
			curspeedbox.Text = ""
		end
	end)
	
	holder.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = holder.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
	UIS.InputBegan:Connect(function(input, gameProcessed)
		if input.KeyCode == toggleKey and not gameProcessed then
			toggleMenu()
		end
	end)
end;
task.spawn(C_28);

return G2L["1"], require;
